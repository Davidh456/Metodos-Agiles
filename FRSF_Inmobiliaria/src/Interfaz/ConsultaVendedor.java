/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import Clases.Vendedor;
import Logica.ABMVendedor;
import imagenes.IconoEliminar;
import imagenes.IconoVendedor;
import java.awt.Color;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lucas
 */
public class ConsultaVendedor extends javax.swing.JPanel {

    List<Vendedor> vendedores;
    /**
     * Creates new form ConsultaVendedor
     */
    public ConsultaVendedor() {
        initComponents();
        setBackground(new Color(245,245,245));
        setSize(630, 400);
        setVisible(true);
        btnModificar.setEnabled(false);
        btnEliminar.setEnabled(false);
        setearTablaVendedores();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Gestión Vendedores"));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Seleccionar vendedor"));

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Apellido", "Tipo Documento", "Documento", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabla);

        btnAgregar.setText("Agregar Vendedor");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar Vendedor");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar Vendedor");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSalir)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnModificar)
                    .addComponent(btnEliminar)
                    .addComponent(btnSalir))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        Inmobiliaria.getInstance().altaVendedor();
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        Inmobiliaria.getInstance().modificarVendedor(vendedores.get(tabla.getSelectedRow()));
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        //Dsps cuando esté la pantalla del loguin hay que mandarlo allá
        Inmobiliaria.getInstance().MenuPrincipal();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        //Tomar el vendedor seleccionado de la tabla
        Vendedor seleccionado = vendedores.get(tabla.getSelectedRow());
        //Preguntar si quiere eliminar el vendedor seleccionado
        IconoEliminar myIcon = new IconoEliminar();
        int resp = JOptionPane.showConfirmDialog(null, 
                "¿Desea eliminar el vendedor seleccionado? Si acepta, no podrá deshacer esta acción.", 
                "Eliminar Vendedor - ¡Atención!", JOptionPane.OK_CANCEL_OPTION, JOptionPane.ERROR_MESSAGE, myIcon);
        
        if(resp == 0){
            ABMVendedor.getInstance().bajaVendedor(seleccionado);//Si aceptó eliminar, lo elimina
            JOptionPane.showMessageDialog(null, "El vendedor se ha eliminado con éxito.",
                    "Eliminar Vendedor - ¡Atención!", JOptionPane.DEFAULT_OPTION, myIcon);
            Inmobiliaria.getInstance().consultaVendedor();
        }else{
            JOptionPane.showMessageDialog(null, "El vendedor no ha sido eliminado.", 
                    "Eliminar Vendedor - ¡Atención!", JOptionPane.DEFAULT_OPTION, myIcon);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables

    private void setearTablaVendedores() {
        vendedores = ABMVendedor.getInstance().listarVendedores();
        DefaultTableModel model = (DefaultTableModel) tabla.getModel();
        
        for(Vendedor v: vendedores)
        {
            String tipoDoc = "";
             switch (v.getTipoDoc()){
                 case 0:
                     tipoDoc = "DNI";
                     break;
                 case 1:
                     tipoDoc = "PS";
                     break;
                 case 2:
                     tipoDoc = "LC";
                     break;
                 case 3:
                     tipoDoc = "LE";
                     break;
             }
             model.addRow(new Object[]{
                 v.getNombre(),
                 v.getApellido(),
                 tipoDoc,
                 v.getNumDoc(),
                 v.getEmail()});
         }
        
        //Habilitar botones cuando se seleccione un vendedor
        tabla.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if(tabla.getSelectedRow()>-1){
                    btnEliminar.setEnabled(true);
                    btnModificar.setEnabled(true);
                }
            }
        });
    }
    
    public Vendedor seleccionarVendedor(){
        List<Vendedor> listaVendedores = ABMVendedor.getInstance().listarVendedores();
        IconoVendedor myIcon = new IconoVendedor();
        String[] lista = new String[listaVendedores.size()];
        int i=0; 
        int indice=0;
        
        for(Vendedor v: listaVendedores){
             String tipoDoc = "";
             switch (v.getTipoDoc()){
                 case 0:
                     tipoDoc = "DNI";
                     break;
                 case 1:
                     tipoDoc = "PS";
                     break;
                 case 2:
                     tipoDoc = "LC";
                     break;
                 case 3:
                     tipoDoc = "LE";
                     break;
             }
            lista[i] = new String(tipoDoc + " " + v.getNumDoc() + " - " + v.getApellido() + " " + v.getNombre());
            i++;
        }
        String resp = (String) JOptionPane.showInputDialog(null,"Seleccione un vendedor: ", "Vendedores", JOptionPane.DEFAULT_OPTION, myIcon, lista, lista[0]);
        
        for(i=0; i<listaVendedores.size(); i++){
            if(lista[i].equals(resp)) indice=i;
        }
        
        return listaVendedores.get(indice);
    }

}
